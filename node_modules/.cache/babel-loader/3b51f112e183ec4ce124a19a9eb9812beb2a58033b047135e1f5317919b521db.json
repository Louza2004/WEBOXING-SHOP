{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n\n  // if (values.lastname === \"\") {\n  //     error.lastname = \"Name should not be empty\"\n  // }\n  // else {\n  //     error.lastname = \"\"\n  // }\n\n  if (values.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email Didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.email)) {\n    error.password = \"Password Didn't match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["D:/LES PROJETS/weboxing-react/src/components/SingupValidation.js"],"sourcesContent":["function Validation (values){\r\n    let error= {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    if (values.name === \"\") {\r\n        error.name = \"Name should not be empty\"\r\n    }\r\n    else {\r\n        error.name = \"\"\r\n    }\r\n\r\n    // if (values.lastname === \"\") {\r\n    //     error.lastname = \"Name should not be empty\"\r\n    // }\r\n    // else {\r\n    //     error.lastname = \"\"\r\n    // }\r\n\r\n\r\n\r\n    if (values.email === \"\") {\r\n        error.email = \"Name should not be empty\"\r\n    }\r\n\r\n    else if (!email_pattern.test(values.email)){\r\n        error.email = \"Email Didn't match\"\r\n    }\r\n    else {\r\n        error.email = \"\"\r\n    }\r\n\r\n\r\n    if (values.password === \"\") {\r\n        error.password = \"Password should not be empty\"\r\n    }\r\n\r\n    else if (!password_pattern.test(values.email)){\r\n        error.password = \"Password Didn't match\"\r\n    }\r\n    else {\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n}\r\n\r\n\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAAEC,MAAM,EAAC;EACxB,IAAIC,KAAK,GAAE,CAAC,CAAC;EACb,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAIH,MAAM,CAACI,IAAI,KAAK,EAAE,EAAE;IACpBH,KAAK,CAACG,IAAI,GAAG,0BAA0B;EAC3C,CAAC,MACI;IACDH,KAAK,CAACG,IAAI,GAAG,EAAE;EACnB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAIA,IAAIJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;IACrBJ,KAAK,CAACI,KAAK,GAAG,0BAA0B;EAC5C,CAAC,MAEI,IAAI,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IACvCJ,KAAK,CAACI,KAAK,GAAG,oBAAoB;EACtC,CAAC,MACI;IACDJ,KAAK,CAACI,KAAK,GAAG,EAAE;EACpB;EAGA,IAAIL,MAAM,CAACO,QAAQ,KAAK,EAAE,EAAE;IACxBN,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAEI,IAAI,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IAC1CJ,KAAK,CAACM,QAAQ,GAAG,uBAAuB;EAC5C,CAAC,MACI;IACDN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EACA,OAAON,KAAK;AAChB;AAACO,EAAA,GA5CQT,UAAU;AA+CnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}